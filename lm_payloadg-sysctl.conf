# NUMA Balancing ###################################
# Disable automatic NUMA balancing if applications are NUMA-aware or if manual tuning is preferred.
# kernel.numa_balancing = 0 
kernel.numa_balancing=1

# Memory Management ###################################
# Reduce swappiness to favor physical memory over swap.
vm.swappiness = 10 
vm.dirty_ratio=10
# Increase dirty page limits for better write performance.
vm.dirty_background_ratio=3
vm.dirty_writeback_centisecs=500
vm.dirty_expire_centisecs=3000
vm.dirty_bytes = 335544320
vm.dirty_background_bytes = 167772160

# Control Transparent Hugepages (THP) ###################################
# Depending on your application's behavior:
# 'always' (default) for system-wide THP use.
# 'madvise' for applications explicitly using huge pages.
# 'never' if THP causes performance issues or using static huge pages.
# Uncomment the desired setting:
# transparent_hugepage=always 
# transparent_hugepage=madvise
# transparent_hugepage=never 

# CPU Scheduling ###################################
# Potentially optimize CPU scheduling for improved throughput.
kernel.sched_autogroup_enabled = 0
kernel.sched_migration_cost_ns = 5000000

# System V IPC (Inter-Process Communication) and specifically deals with message queues
kernel.msgmni=32768

# File Allocation size... Set for 26GB file writes ###################################
# kernel.shmmax: This parameter defines the maximum size of a single shared memory segment 
# a process can allocate. If your application needs to allocate a shared memory segment 
# for the entire 26GB file as one chunk, kernel.shmmax needs to be at least that size.
#If you decide to set kernel.shmmax to 28GB (29,917,287,424 bytes) and assuming a page size of 4096 bytes, kernel.shmall would be:

# kernel.shmall = ceil(29917287424 / 4096) = 7,304,500
# kernel.shmall=7304500

# For systems with large memory, 16TB or more
# kernel.shmmax=18446744073692774399

# Network Tuning (Optional, for network-intensive applications) ###################################
# Disable TCP timestamps for better CPU utilization.
# net.ipv4.tcp_timestamps = 0 
net.ipv4.tcp_timestamps = 0

# Enable TCP selective acks for better throughput.
# net.ipv4.tcp_sack = 1 
net.ipv4.tcp_sack = 1

# Increase maximum length of processor input queues.
# net.core.netdev_max_backlog = 250000 
net.core.netdev_max_backlog = 250000
# Increase TCP maximum and default buffer sizes.
# net.core.rmem_max = 4194304 
# net.core.wmem_max = 4194304
net.core.rmem_max=655135
net.core.wmem_max=655135
# net.core.rmem_default = 4194304 
# net.core.wmem_default = 4194304 
# net.core.optmem_max = 4194304 
# Increase memory thresholds to prevent packet dropping.
# net.ipv4.tcp_rmem = "4096 87380 4194304" 
# net.ipv4.tcp_wmem = "4096 65536 4194304"
net.ipv4.tcp_rmem=4096    262144   655135
net.ipv4.tcp_wmem=4096    262144   655135
# Enable low latency mode for TCP.
# net.ipv4.tcp_low_latency = 1 
net.ipv4.tcp_low_latency = 1 
